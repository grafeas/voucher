package grafeasos

import (
	"strings"

	"github.com/Shopify/voucher"
	grafeaspb "github.com/grafeas/client-go/0.1.0"
)

// vulProject is the project that Google's Container Analysis writes vulnerability
// occurrences to.
const vulProject = "projects/goog-vulnz/notes/"

// getSeverity translates the client-fo grafeas Severity to a Voucher Severity.
func getSeverity(severity *grafeaspb.VulnerabilitySeverity) voucher.Severity {
	switch *severity {
	case grafeaspb.MINIMAL_VulnerabilitySeverity:
		return voucher.NegligibleSeverity
	case grafeaspb.LOW_VulnerabilitySeverity:
		return voucher.LowSeverity
	case grafeaspb.MEDIUM_VulnerabilitySeverity:
		return voucher.MediumSeverity
	case grafeaspb.HIGH_VulnerabilitySeverity:
		return voucher.HighSeverity
	case grafeaspb.CRITICAL_VulnerabilitySeverity:
		return voucher.CriticalSeverity
	}
	return voucher.UnknownSeverity
}

// OccurrenceToVulnerability converts an Occurrence to a Vulnerability.
func OccurrenceToVulnerability(occ *grafeaspb.V1beta1Occurrence) (vul voucher.Vulnerability) {
	vul.Name = strings.Replace(occ.NoteName, vulProject, "", 1)
	vulnDetails := occ.Vulnerability

	vul.Severity = getSeverity(vulnDetails.Severity)
	packageIssues := vulnDetails.PackageIssue

	if vul.Severity == voucher.UnknownSeverity && len(packageIssues) > 0 {
		vul.Severity = getSeverity(vulnDetails.EffectiveSeverity)
	}

	return
}
